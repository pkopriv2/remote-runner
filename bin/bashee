#! /bin/bash

set -o errexit
set -o errtrace

source ${rr_home:-$HOME/.rr}/require.sh

require "lib/msg.sh"

if [[ -z $1 ]] 
then
	error "Must provide a bashee file."
	exit 1
fi 

file=$1
if [[ ! -f $file ]] 
then
	error "Bashee file [$file] doesn't exist."
	exit 1 
fi 

tmp_dir=${tmp_dir:-/tmp}
if [[ ! -d $tmp_dir ]]
then
	error "That temporary directory [$tmp_dir] doesn't exist."
	exit 1
fi

tmp_file=$tmp_dir/bashee.tmp
if ! touch  $tmp_file &> /dev/null
then
	error "Unable to create tmp file."
	exit 1
fi 

delim=${bashee_delim:-"--"}

{
	while read line 
	do
		# is this the first line, and is it a bash cmd?
		if [[ -z $cmd ]] && ! echo $line | grep -q "^$delim"
		then
			cmd=false
			echo "cat - <<-EOF"
			echo $line | sed 's|\$|\\$|g'
			continue
		fi

		# is this the start or end of a bash cmd area?
		if echo $line | grep -q "^$delim"
		then 
			if [[ -z $cmd ]] || ! $cmd
			then
				echo "EOF"
				cmd=true
				continue
			fi

			echo "cat - <<-EOF"
			cmd=false
			continue
		fi

		if $cmd 
		then
			echo $line
		else
			echo $line | sed 's|\$|\\$|g'
		fi
			
	done < $file

	$cmd || echo "EOF" 

} | cat - > $tmp_file


on_exit() {
	rm -f /tmp/bashee.tmp
	rm -f /tmp/bashee.out
}

on_source_error() {
	local line_num=$1

	error "Error sourcing stdin: $line_num"
	exit 1
}

on_template_error() {
	local line_num=$1


	# The line number of the /tmp/bashee.out file will be
	# offset by one from the real template since we 
	# added an extra line at the beginning.
	(( line_num-- )) 

	error "Error procesing template: $file: $line_num"
	exit 1
}

trap 'on_exit' EXIT INT
trap 'on_source_error $LINENO' ERR

if ! test -t 0
then
	source /dev/stdin
fi

trap 'on_template_error $LINENO' ERR

source $tmp_file > /tmp/bashee.out

cat /tmp/bashee.out
